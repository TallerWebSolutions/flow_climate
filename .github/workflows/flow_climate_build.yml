name: FlowClimateBuild
on: [push]

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: Cache Ruby Gems
          uses: actions/cache@v2
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-

          - name: Bundle Install
            run: |
              bundle config path vendor/bundle
              bundle install --jobs 4 --retry 3
      - name: Run linters
        env:
          RAILS_ENV: test
        run: |
          bundle exec rubocop --parallel
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST: "localhost"
          POSTGRES_USER: ""
          POSTGRES_DB: "flowcontrol_test"
          POSTGRES_PASSWORD: ""
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: Cache Ruby Gems
          uses: actions/cache@v2
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-

          - name: Bundle Install
            run: |
              bundle config path vendor/bundle
              bundle install --jobs 4 --retry 3
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: ""
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bin/rails db:setup

      - name: Run tests
        run: bin/rspec
