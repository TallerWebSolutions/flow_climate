name: FlowClimateBuild
on:
  push:
    branches: [stage]

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          gem update --system --no-document
          bundle config path vendor/bundle
          bundle install --without development --jobs 4 --retry 3
      - name: Run linters
        run: |
          bundle exec rubocop --parallel

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: flowcontrol_test
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          gem update --system --no-document
          bundle config path vendor/bundle
          bundle install --without development --jobs 4 --retry 3
      - name: Install spa dependencies
        run: |
          cd app/spa
          npm install
          npm run build
          npm run test

      - name: Test Rails & publish code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          secret_key_32_encoded: "8L+WeHTWhNtEAvQzoRaYqYtl4VCwDMReh2SzicO/iCA=\n"
          encryption_service_salt: ${{ secrets.ENCRYPTION_SERVICE_SALT }}
          secret_key_base: ${{ secrets.SECRET_KEY_BASE }}
          RAILS_ENV: test
          PG_HOST: localhost
          PG_USER: "postgres"
          PG_PASSWORD: "postgres"
          PG_PORT: ${{ job.services.postgres.ports['5432'] }}
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: bundle exec rspec --fail-fast
          debug: true

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [linters, tests]

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "flowclimatestaging"
          heroku_email: "celso.av.martins@gmail.com"
          branch: "stage"
